version: '3'
services:

  db:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_DB: 'flight-searcher'
      POSTGRES_USER: 'arnas'
      POSTGRES_PASSWORD: 'letsgoyeah'
    ports:
      - "5555:5432"
    networks:
      - my_network
    volumes:
      - ./.docker-data/.pg-data:/var/lib/postgresql/data

  mq:
    image: rabbitmq:latest
    container_name: my_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./config/.rabbit-plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    container_name: my_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus-config.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - web-api
      - flights-collector
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    container_name: my_grafana
    ports:
      - "3331:3000"
    networks:
      - my_network
  web-api:
    image: golang:1.21
    command: [ "go", "run", "./components/web-api" ]
    volumes:
      - ./:/app
    env_file:
      - .env
    ports:
      - "8181:8080"
    working_dir: /app
    networks:
      - my_network
    depends_on:
      - mq
      - db
  flights-collector:
    image: golang:1.21
    command: [ "go", "run", "./components/flights-collector" ]
    volumes:
      - ./:/app
    env_file:
      - .env
    working_dir: /app
    networks:
      - my_network
    depends_on:
      - mq
      - db
  migrate:
    image: golang:1.21
    command: [ "go", "run", "./database/migrate.go" ]
    volumes:
      - ./:/app
    env_file:
      - .env
    working_dir: /app
    networks:
      - my_network
    depends_on:
      - db
networks:
  my_network: